{"version":3,"sources":["Ducks/Reducer.js","Assests/Kwizz.svg","Assests/Kwizzard--test-pixel.svg","Assests/gameer.png","Assests/white-star.svg","components/animations/Stars.js","components/Landing/Landing.js","components/Host/Main.js","components/Host/New_Quiz.js","components/Game/Timer.js","Assests/triangle.svg","Assests/diamond.svg","Assests/square.svg","Assests/circle.svg","components/Game/Game_Questions.js","components/animations/jerm.png","components/animations/jerm-zoom.png","components/animations/zoomin.js","components/Game/Game_Over.js","components/Game/Game_Question_Over.js","components/Game/Game.js","components/Host/Questions.js","components/Host/New_Question.js","components/Game/Player_Questions.js","Assests/check-path.js","components/animations/Check.js","Assests/incorrect-path.js","components/animations/Incorrect.js","components/Game/Player_Question_Over.js","Assests/load-circle-outline.svg","components/Game/Player.js","Store.js","components/Landing/change.js","components/Host/Edit_Question.js","App.js","registerServiceWorker.js","index.js"],"names":["initialState","quiz","nickname","selectedPin","quizToEdit","iduser","loggedIn","SELECTED_QUIZ","NEW_NICKNAME","SELECTED_PIN","QUIZ_TO_EDIT","SET_IDUSER","GET_IDUSER","editingQuiz","type","payload","Stars","_jsx","className","children","_jsxs","src","star","alt","Landing","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","state","pin","toggle","handleInput","bind","_assertThisInitialized","handleToggle","handleNicknameInput","handleGo","_createClass","key","value","e","this","setState","target","props","handleNickname","Kwizz","placeholder","onChange","Link","to","onClick","Playerimg","id","Component","connect","Main","quizzes","redirect","setRedirect","getQuizzes","_this2","axios","get","domain","params","idu","then","res","data","selectedQuiz","_this3","delete","idquiz","status","alert","_this4","Redirect","mappedQuizzes","map","quiz_name","info","deleteQuiz","Kwizzard","dispatch","New_Quiz","handleTextarea","createQuiz","post","idcreater","name","Timer","time","seconds","timer","startTimer","countDown","secs","divisor_for_minutes","divisor_for_seconds","Math","floor","ceil","timeLeftVar","secondsToTime","setInterval","clearInterval","s","GameQuestions","question","triangle","answer1","diamond","answer2","square","answer3","circle","answer4","Zoomin","Jeremy","height","zoom","GameOver","Zoom","leaderboard","pop","GameQuestionOver","lastQuestion","nextQuestion","Game","isLive","questionOver","gameOver","currentQuestion","questions","players","playerCounter","leaderBoard","socket","io","process","generatePin","on","addPlayer","submitAnswer","answer","newPin","random","emit","_this$state","updatedPlayers","_toConsumableArray","forEach","player","qAnswered","answeredCorrect","getLeaderBoard","internalTimer","timeCheck","pAnswered","score","length","checkAnswers","timeKept","_this$state2","timeKeeper","newPlayers","push","filter","correctanswer","sort","a","b","_this$state3","mappedPlayers","startGame","Questions","newName","newInfo","getQuestions","put","handleUpdatedQuiz","_this5","match","console","log","history","_this6","mappedQuestions","concat","deleteQuestion","updateQuiz","displayEdit","New_Question","correctAnswer","addQuestion","min","max","PlayerQuestion","xmlns","width","fill","viewBox","d","Check","check","x1","y1","x2","y2","Incorrect","IncorrectPath","PlayerQuestionOver","Player","pinCorrect","gameStarted","answerSubmitted","num","load","PlayerQuestions","store","createStore","arguments","undefined","action","Object","assign","_objectSpread","require","config","change","username","password","_res$data","message","setIdUser","catch","err","error","Edit_Question","getQuestion","response","headers","request","updateQuestion","App","apply","Switch","Route","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","Provider","Store","HashRouter","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d85d470d.chunk.js","sourcesContent":["import { createStore } from 'redux';\nconst initialState = {\n    quiz: {},\n    nickname: '',\n    selectedPin: 0,\n    quizToEdit: {},\n    iduser: null,\n    loggedIn: false\n}\n\nconst SELECTED_QUIZ = 'SELECTED_QUIZ'\nconst NEW_NICKNAME = 'NICKNAME'\nconst SELECTED_PIN = 'SELECTED_PIN'\nconst QUIZ_TO_EDIT = 'QUIZ_TO_EDIT'\nconst SET_IDUSER = 'SET_IDUSER'\nconst GET_IDUSER = 'GET_IDUSER'\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case SELECTED_QUIZ:\n            return Object.assign({}, state, { quiz: action.payload })\n        case NEW_NICKNAME:\n            return Object.assign({}, state, { nickname: action.payload })\n        case SELECTED_PIN:\n            return Object.assign({}, state, { selectedPin: action.payload })\n        case QUIZ_TO_EDIT:\n            return Object.assign({}, state, { quizToEdit: action.payload })\n        case SET_IDUSER:\n            \n            return {\n                ...state,\n                loggedIn: true,\n                iduser: action.payload\n            }\n        case GET_IDUSER:\n            return Object.assign({}, state, { iduser: action.payload })\n        default:\n            return state;\n    }\n}\n\n\nexport function selectedQuiz(quiz) {\n    return {\n        type: SELECTED_QUIZ,\n        payload: quiz\n    }\n}\nexport function handleNickname(nickname) {\n    return {\n        type: NEW_NICKNAME,\n        payload: nickname\n    }\n}\nexport function selectedPin(pin) {\n    return {\n        type: SELECTED_PIN,\n        payload: pin\n    }\n}\nexport function editingQuiz(quiz) {\n    return {\n        type: QUIZ_TO_EDIT,\n        payload: quiz\n    }\n}\n\nexport function setIdUser(iduser) {\n    return {\n        type: SET_IDUSER,\n        payload: iduser\n    };\n}\n\nexport function getIdUser(iduser) {\n    return {\n        type: GET_IDUSER,\n        payload: iduser\n    };\n}","export default __webpack_public_path__ + \"static/media/Kwizz.d5e2e8d0.svg\";","export default __webpack_public_path__ + \"static/media/Kwizzard--test-pixel.94c8341f.svg\";","export default __webpack_public_path__ + \"static/media/gameer.e2489b75.png\";","export default __webpack_public_path__ + \"static/media/white-star.149bd8da.svg\";","import React from 'react';\nimport star from '../../Assests/white-star.svg';\n\nexport default function Stars(){\n    return (\n        <div  className='back '>\n            <div className='container grid1'>\n                <div className='topl'>\n                    <img className='star' src={star} alt=''/>\n                    <img className='star1' src={star} alt=''/>\n                    <img className='star2' src={star} alt=''/>\n                </div> \n                    <img className='star1 middle' src={star} alt=''/>\n                    <img className='star2 middle' src={star} alt=''/>\n                <div className='botm-right'>\n                    <img className='star3' src={star} alt=''/>\n                    <img className='star' src={star} alt=''/>\n                    <img className='star' src={star} alt=''/>\n                </div> \n            </div> \n        </div> \n    )\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { handleNickname, selectedPin } from '../../Ducks/Reducer';\nimport './Landing.css';\nimport Kwizz from '../../Assests/Kwizz.svg'\nimport Kwizzard from '../../Assests/Kwizzard--test-pixel.svg'\nimport Playerimg from '../../Assests/gameer.png'\nimport Stars from '../animations/Stars.js';\nimport 'dotenv/config'\n\nclass Landing extends Component {\n    constructor() {\n        super();\n        this.state = {\n            pin: '',\n            nickname: '',\n            toggle: false\n        }\n        this.handleInput = this.handleInput.bind(this);\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleNicknameInput = this.handleNicknameInput.bind(this);\n        this.handleGo = this.handleGo.bind(this)\n    }\n    handleInput(e) {\n        this.setState({\n            pin: e.target.value\n        })\n\n    }\n    handleToggle() {\n\n\n        this.props.selectedPin(this.state.pin)\n        this.setState({\n            toggle: true\n        })\n\n    }\n    handleNicknameInput(e) {\n        this.setState({\n            nickname: e.target.value\n        })\n    }\n    handleGo() {\n\n        this.props.handleNickname(this.state.nickname)\n    }\n    handleGo1() {\n\n\n    }\n\n    render() {\n\n        return (\n\n            <div className='component-container' >\n                <div>\n                    <Stars />\n                </div>\n\n                {\n\n                    !this.state.toggle\n                        ?\n                        <div className='landing-wrapper' >\n                            <div className='logo-container' >\n                                <img src={Kwizz} alt='Kwizz logo' className='logo' />\n                            </div>\n                            <div className='player-input-wrapper' >\n                                <input type='number' value={this.state.pin} placeholder='Kwizz! PIN' onChange={this.handleInput} className='input-user' />\n                                <button onClick={this.handleToggle} className='btn-enter' >Enter</button>\n                            </div>\n                        </div>\n                        :\n                        <div className='landing-wrapper' >\n                            <div className='logo-container' >\n                                <img src={Kwizz} alt='Kwizz logo' className='logo' />\n                            </div>\n                            <div>\n                                <input type='text' value={this.state.nickname} placeholder='Nickname' onChange={this.handleNicknameInput} className='input-user' />\n                                <Link to='/player'>\n                                    <button onClick={this.handleGo} className='btn-enter' >OK, go!</button>\n                                </Link>\n                            </div>\n                        </div>\n                }\n                <div className='logo-host' >\n                    <img src={Playerimg} alt='' className='kwizzard' />\n                    <div className='btn-host' >\n                    <Link to='/change'>\n                        <button id='atag' >Role: Player</button>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\n\nexport default connect(null, { handleNickname, selectedPin })(Landing)","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { selectedQuiz, editingQuiz, getIdUser } from '../../Ducks/Reducer';\nimport './Host.css';\nimport Kwizz from '../../Assests/Kwizz.svg';\nimport Kwizzard from '../../Assests/Kwizzard--test-pixel.svg'\n\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: \"\",\n            quizzes: [],\n            redirect: false\n        }\n        this.setRedirect = this.setRedirect.bind(this);\n    }\n    componentDidMount() {\n        const { iduser } = this.props;\n\n        this.setState({ id: iduser })\n        this.getQuizzes(iduser)\n\n\n\n    }\n    getQuizzes(iduser) {\n        const domain = process.env.REACT_APP_DOMAIN\n        let url = domain+  \"/getQuizzes\";\n        //  let url = \"http://localhost:3030/getQuizzes\";\n\n        axios.get(url, {\n            params: {\n                idu: iduser\n            }\n        }).then(res => {\n            this.setState({\n                quizzes: res.data\n            })\n\n        })\n    }\n    setRedirect(e) {\n        this.props.selectedQuiz(e);\n\n        this.setState({\n            redirect: true\n        })\n    }\n    deleteQuiz(id) {\n        const domain = process.env.REACT_APP_DOMAIN\n        let url = domain +\"/deletequiz/\";\n        //      axios.delete('http://localhost:3030/deletequiz/', {\n        axios.delete(url, {\n            params: {\n                idquiz: id\n            }\n        }).then(res => {\n            if (res.status === 200) {\n                this.getQuizzes(this.state.id);\n            } else {\n                alert('Something went wrong :(')\n            }\n        })\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to='/game' />\n        }\n        let { quizzes } = this.state;\n        let mappedQuizzes = quizzes.map(quiz => {\n\n            return (\n                <div key={quiz.id} className='kwizz-container' >\n\n                    <h1 className='kwizz-info kwizz-title' >{quiz.quiz_name}</h1>\n                    <p className='kwizz-info kwizz-desc'>{quiz.info}</p>\n                    <div className='btn-container' >\n                        <button onClick={() => this.setRedirect(quiz)} className='btn-play' >Play</button>\n                        <button onClick={() => this.deleteQuiz(quiz.id)} className='btn-play' >Delete</button>\n                        <Link to='/host/questions'>\n                            <button onClick={() => this.props.editingQuiz(quiz)} className='btn-play' >Edit</button>\n                        </Link>\n                    </div>\n                </div>\n            )\n        })\n        const { id } = this.state\n        return (\n            <div className='mapped-container' >\n                <div className='host-logo-container'>\n                    <img src={Kwizz} alt='kwizz logo' className='logo' />\n                </div>\n                <div className='newKwizz' >\n                    <Link to='/host/newquiz' className='btn-link'>\n                        <button className='btn-new'>New Kwizz!</button>\n                    </Link>\n                </div>\n                <div className='mapped-Kwizzes-container' >\n                    {mappedQuizzes}\n                </div>\n                <div className='logo-host' >\n                    <img src={Kwizzard} alt='' className='kwizzard' />\n                    <div className='btn-host' >\n                        <Link to='/change'>\n                            <button id='atag' >Role: Host   <p>ID: {this.props.iduser}</p></button>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    iduser: state.iduser,\n    pin: state.selectedPin,\n    quiz: state.quizToEdit\n});\nconst mapDispatchToProps = dispatch => ({\n    selectedQuiz: pin => dispatch(selectedQuiz(pin)),\n    editingQuiz: quiz => dispatch(editingQuiz(quiz))\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","import React, { Component } from 'react';\nimport axios from 'axios'\nimport { Redirect } from \"react-router-dom\"\nimport { connect } from 'react-redux'\nimport { editingQuiz } from '../../Ducks/Reducer';\n\n\nclass New_Quiz extends Component {\n    constructor() {\n        super();\n        this.state = {\n            quiz_name: '',\n            info: '',\n            redirect: false\n        }\n        this.handleInput = this.handleInput.bind(this);\n        this.handleTextarea = this.handleTextarea.bind(this);\n        this.createQuiz = this.createQuiz.bind(this)\n    }\n    handleInput(e) {\n        this.setState({\n            quiz_name: e.target.value\n        })\n    }\n    handleTextarea(e) {\n        this.setState({\n            info: e.target.value\n        })\n    }\n    createQuiz() {\n        const domain = process.env.REACT_APP_DOMAIN\n        let url =  domain + \"/newquiz\";\n   //     axios.post('http://localhost:3030/newquiz', { idcreater: this.props.idcreater, name: this.state.quiz_name, info: this.state.info }).then(res => {\n        axios.post(url, { idcreater: this.props.idcreater, name: this.state.quiz_name, info: this.state.info }).then(res => {\n            this.props.editingQuiz(res.data[0])\n            this.setState({\n                redirect: true\n            })\n        })\n\n    }\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to='/host/questions' />\n        }\n        return (\n            <div className='mapped-container' >\n                <div className='new-kwizz-form' >\n                    <label className='kwizz-desc kwizz-info' >New Kwizz Title</label>\n                    <input className='title-input' onChange={this.handleInput} type='text' />\n                    <label className='kwizz-desc kwizz-info'>Description</label>\n                    <textarea className='desc-input' onChange={this.handleTextarea}></textarea>\n                    <div className='kwizz-info ok-go-div' >\n                        <button onClick={this.createQuiz} className='btn-play  ok-go' >Ok, Go</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        idcreater: state.iduser\n    }\n}\nexport default connect(mapStateToProps, { editingQuiz })(New_Quiz)","import React, { Component } from 'react';\n\nexport default class Timer extends Component {\n    constructor() {\n      super();\n      this.state = { time: {}, seconds: 20 };\n      this.timer = 0;\n      this.startTimer = this.startTimer.bind(this);\n      this.countDown = this.countDown.bind(this);\n    }\n  \n    secondsToTime(secs){\n      let hours = Math.floor(secs / (60 * 60));\n  \n      let divisor_for_minutes = secs % (60 * 60);\n      let minutes = Math.floor(divisor_for_minutes / 60);\n  \n      let divisor_for_seconds = divisor_for_minutes % 60;\n      let seconds = Math.ceil(divisor_for_seconds);\n  \n      let obj = {\n        \"h\": hours,\n        \"m\": minutes,\n        \"s\": seconds\n      };\n      return obj;\n    }\n  \n    componentDidMount() {\n      let timeLeftVar = this.secondsToTime(this.state.seconds);\n      this.setState({ time: timeLeftVar });\n      this.startTimer()\n    }\n  \n    startTimer() {\n      if (this.timer == 0) {\n        this.timer = setInterval(this.countDown, 1000);\n      }\n    }\n    componentWillUnmount() {\n      clearInterval(this.timer);\n    }\n    countDown() {\n      let seconds = this.state.seconds - 1;\n      this.setState({\n        time: this.secondsToTime(seconds),\n        seconds: seconds,\n      });\n      \n      if (seconds == 0) { \n        clearInterval(this.timer);\n      }\n    }\n  \n    render() {\n      return(\n        <div className='timer'>\n         Seconds Left: {this.state.time.s}\n        </div>\n      );\n    }\n  }","export default __webpack_public_path__ + \"static/media/triangle.f38fff2e.svg\";","export default __webpack_public_path__ + \"static/media/diamond.63ee4522.svg\";","export default __webpack_public_path__ + \"static/media/square.841d434e.svg\";","export default __webpack_public_path__ + \"static/media/circle.fefd1946.svg\";","import React from 'react';\nimport Timer from './Timer';\nimport './Game.css';\nimport triangle from '../../Assests/triangle.svg'\nimport diamond from '../../Assests/diamond.svg'\nimport square from '../../Assests/square.svg'\nimport circle from '../../Assests/circle.svg'\n\nexport default function GameQuestions(props){\n    return(\n        <div className='questions-container' >\n            <Timer/>\n            <h1 className='player-name'>{props.question}</h1>\n            <div className='questions-grid' >\n                <div className='question q1'>\n                <div className='shape-container' >\n                    <img src={triangle} alt='' className='shape-question' />\n                </div> \n                    <p id='player-join' >{props.answer1}</p>\n                 </div> \n                <div className='question q2'>\n                    <div className='shape-container'>\n                    <img src={diamond} alt='' className='shape-question' />\n                    </div> \n                    <p id='player-join'>{props.answer2}</p>\n                 </div>\n                <div className='question q3'>\n                    <div className='shape-container'>\n                    <img src={square} alt='' className='shape-question' />\n                    </div> \n                    <p id='player-join'>{props.answer3}</p>\n                 </div>\n                <div className='question q4'>\n                    <div className='shape-container'>\n                     <img src={circle} alt='' className='shape-question' />\n                    </div> \n                     <p id='player-join'>{props.answer4}</p>\n                 </div>\n            </div> \n        </div> \n    )\n}","export default __webpack_public_path__ + \"static/media/jerm.b0086623.png\";","export default __webpack_public_path__ + \"static/media/jerm-zoom.e0bd5cb8.png\";","import React from 'react';\nimport Jeremy from './jerm.png';\nimport zoom from './jerm-zoom.png';\nimport './animate.css';\n\n\nexport default function Zoomin(){\n    return (\n        <div  className=''>\n            <img src={Jeremy} height='400px'className='jeremy'/>\n            <img src={zoom} height='550px' className='zoom'/>\n        </div> \n    )\n}","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Zoom from '../../components/animations/zoomin.js';\nimport './Game.css';\n\n\nexport default function GameOver(props){\n    return(\n        <div className='game-over'>\n            <Zoom/>\n            <h1 className='leaderBoard-title'>Game Over</h1>\n            <br/>\n            <h2 className='leaderBoard'>1st Place: {props.leaderboard[0].name}</h2>\n            <h2 className='leaderBoard'>2nd Place: {props.leaderboard[1].name}</h2>\n            <h2 className='leaderBoard'>Last Place: {props.leaderboard.pop().name}</h2>\n            <br/>\n            <Link to='/host'>\n            <button className='btn-newGame'>\n            Start a new Game?\n            </button>\n            </Link>\n        </div> \n    )\n}","import React from 'react';\nimport GameOver from './Game_Over'\nimport '../Host/Host.css';\nimport './Game.css';\n\nexport default function GameQuestionOver(props){\n    return(\n        <div>\n            {!props.lastQuestion ?\n            <div className='question-over-wrapper' >\n                <div className='center' >\n                    <h1 className='player-name'>Question Over</h1>\n                </div> \n                <div className='center' >\n                <button className='btn-new' onClick={props.nextQuestion}>Next Question</button>\n                </div>   \n            </div> \n            :\n            <GameOver leaderboard={props.leaderboard}/>\n        }\n        </div>\n    )\n}","import React, { Component } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport { connect } from 'react-redux';\nimport GameQuestions from './Game_Questions';\nimport GameQuestionOver from './Game_Question_Over';\n\n\n\nclass Game extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            pin: 0,\n            timer: 20,\n            isLive: false,\n            questionOver: false,\n            gameOver: false,\n            currentQuestion: 0,\n            questions: [],\n            players: [],\n            playerCounter: 0,\n            leaderBoard: []\n        }\n        this.questionOver = this.questionOver.bind(this);\n        this.nextQuestion = this.nextQuestion.bind(this);\n    }\n\n    componentDidMount() {\n\n        const domain = process.env.REACT_APP_DOMAIN\n        let url = domain + \"/getquestions\";\n        //axios.get('http://localhost:3030/getquestions',{\n        axios.get(url, {\n            params: {\n                idquiz: this.props.quiz.id\n            }\n        }).then(res => {\n            this.setState({ questions: res.data })\n        })\n        const IP = process.env.REACT_APP_IP\n        //      this.socket = io('http://127.0.0.1:3030');\n        this.socket = io(IP);\n\n        this.generatePin();\n        this.socket.on('room-joined', data => {\n            this.addPlayer(data.name, data.id)\n        })\n        this.socket.on('player-answer', data => {\n            this.submitAnswer(data.name, data.answer)\n        })\n\n    }\n    generatePin() {\n        let newPin = Math.floor(Math.random() * 9000, 10000)\n        this.setState({ pin: newPin })\n        this.socket.emit('host-join', { pin: newPin });\n    }\n    startGame() {\n        let { players } = this.state;\n        if (players[0] //&& players[1] && players[2]\n        ) {\n            this.nextQuestion()\n            this.setState({\n                isLive: true\n            })\n        } else {\n            alert('You need at least 3 players to start')\n        }\n    }\n    questionOver() {\n        let { pin, players } = this.state\n        this.socket.emit('question-over', { pin })\n        let updatedPlayers = [...players];\n        updatedPlayers.forEach((player) => {\n            player.qAnswered = false;\n            player.answeredCorrect = false;\n        })\n        this.getLeaderBoard()\n        this.setState({\n            questionOver: true,\n            currentQuestion: this.state.currentQuestion + 1,\n            timer: 20,\n            players: updatedPlayers\n        })\n    }\n    timeKeeper() {\n        let internalTimer = 20;\n        let players = [...this.state.players]\n\n        this.setState({ questionOver: false })\n\n        timeCheck = timeCheck.bind(this)\n\n        function timeCheck() {\n            let checkAnswers = () => {\n                let pAnswered = 0;\n                players.forEach((player) => {\n                    //      player.qAnswered ? ++pAnswered :null\n                    player.qAnswered && ++pAnswered;\n                })\n                players.forEach(player => {\n                    if (player.answeredCorrect) {\n                        player.score += (internalTimer * 10 + 1000)\n                        this.socket.emit('sent-info', { id: player.id, score: player.score, answeredCorrect: player.answeredCorrect })\n                    }\n\n                });\n              //  pAnswered === players.length ? internalTimer = 0 : null\n              if (pAnswered === players.length) {\n                internalTimer=0;\n            }\n                internalTimer -= 1;\n            }\n            let endQuestion = () => {\n                clearInterval(timeKept);\n                this.questionOver();\n            }\n            return internalTimer > 0\n                ? checkAnswers()\n                : endQuestion()\n        }\n        let timeKept = setInterval(() => { timeCheck() }, 1000);\n        return timeKept\n    }\n\n    nextQuestion() {\n        let { pin, questions, currentQuestion } = this.state;\n        this.timeKeeper();\n        // this.hotTimer();\n\n        currentQuestion === questions.length\n            ? this.setState({ gameOver: true })\n            :\n            this.socket.emit('next-question', { pin })\n        this.setState({ questionOver: false })\n    }\n\n    addPlayer(name, id) {\n        let player = {\n            id: id, // this is now their socket id so they can pull their score to the player component using this\n            name: name,\n            score: 0,\n            qAnswered: false,\n            answeredCorrect: false\n        }\n        let newPlayers = [...this.state.players]\n        newPlayers.push(player)\n        // console.log(newPlayers)\n        this.setState({\n            players: newPlayers,\n            playerCounter: this.state.playerCounter + 1\n        })\n    }\n\n    submitAnswer(name, answer) {\n        let player = this.state.players.filter(player => player.name === name);\n        let updatedPlayers = this.state.players.filter(player => player.name !== name);\n\n        player[0].qAnswered = true;\n        answer === this.state.questions[this.state.currentQuestion].correctanswer\n            ? player[0].answeredCorrect = true\n            : player[0].answeredCorrect = false\n\n        updatedPlayers.push(player[0])\n        this.setState({\n            players: updatedPlayers\n        })\n\n    }\n\n    getLeaderBoard() {\n        let unsorted = [...this.state.players];\n        let leaderboard = unsorted.sort((a, b) => b.score - a.score)\n        this.setState({\n            leaderBoard: leaderboard\n        })\n    }\n\n    render() {\n        let { pin, questions, currentQuestion, isLive, questionOver, gameOver } = this.state;\n        let mappedPlayers = this.state.players.map(player => {\n            return (\n                <p key={player.id} className='player-name' >{player.name}</p>\n            )\n        })\n        return (\n            <div className='component-container' >\n                <div className='pin'>\n                    <p id='player-pin'>Kwizz Pin</p>\n                    <h1>{pin}</h1>\n                </div>\n                {\n                    !isLive && !questionOver && !gameOver ?\n                        <div className='btn-players' >\n                            <button onClick={() => this.startGame()} className='btn-play' >Play</button>\n                            <p className='player-name' id='player-join'>Players joined!</p>\n                            {mappedPlayers}\n                        </div>\n                        :\n                        isLive && !questionOver && !gameOver ?\n                            <GameQuestions\n                                question={questions[currentQuestion].question}\n                                answer1={questions[currentQuestion].answer1}\n                                answer2={questions[currentQuestion].answer2}\n                                answer3={questions[currentQuestion].answer3}\n                                answer4={questions[currentQuestion].answer4}\n                                questionOver={this.questionOver} />\n                            :\n                            <GameQuestionOver\n                                nextQuestion={this.nextQuestion}\n                                leaderboard={this.state.leaderBoard}\n                                lastQuestion={this.state.questions.length === this.state.currentQuestion} />\n                }\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        quiz: state.quiz\n    }\n}\n\nexport default connect(mapStateToProps)(Game)","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { editingQuiz } from '../../Ducks/Reducer';\nimport './Host-Question.css';\nimport './Host.css';\n\n\nclass Questions extends Component {\n    constructor() {\n        super();\n        this.state = {\n            questions: [],\n            quiz: {},\n            newName: '',\n            newInfo: '',\n            toggle: false\n        }\n    }\n    componentDidMount() {\n        this.setState({\n            quiz: this.props.quizToEdit\n        })\n     \n        this.getQuestions();\n    }\n\n    getQuestions() {\n    \n        const domain = process.env.REACT_APP_DOMAIN\n        let url = domain + \"/getquestions\";\n        const id = this.props.quizToEdit.id;\n       // axios.get('http://localhost:3030/getquestions',{\n        axios.get(url,{\n            params: {\n                idquiz: id\n            }\n        }).then(res => {\n            this.setState({ questions: res.data })\n        })\n    }\n\n    deleteQuestion(id) {\n        const domain = process.env.REACT_APP_DOMAIN\n        let url =  domain + \"/deletequestion/\";\n//       axios.delete('http://localhost:3030/deletequestion/',{\n        axios.delete(url,{\n        params: {\n            idquiz: id}\n        }).then(res => {\n            this.getQuestions()\n        })\n    }\n\n    displayEdit(){\n        this.setState({\n            toggle: !this.state.toggle\n        })\n    }\n\n    updateQuiz() {\n        const domain = process.env.REACT_APP_DOMAIN\n        let url =domain+ \"/updatequiz\";\n        let { newName, newInfo, quiz } = this.state;\n        this.setState({\n            toggle: !this.state.toggle\n        })\n      \n        if (newName && newInfo) {\n            axios.put(url, { newName, newInfo, id: quiz.id }).then(res => {\n                this.handleUpdatedQuiz(quiz.id)\n            })\n        } else {\n            alert('All fields must be completed')\n        }\n    }\n    handleUpdatedQuiz(id) {\n        const domain = process.env.REACT_APP_DOMAIN\n        let url =domain+ \"/getquiz\";\n        axios.get(url,{\n            params: {\n                id: this.props.match.params.id\n            }\n        }).then(res => {\n            console.log(res.status)//ok\n            // this.props.editingQuiz(res.data[0])\n            // this.setState({\n            //     quiz: this.props.quizToEdit\n            this.props.history.push('/host');\n            })\n        // })\n       \n    }\n\n    render() {\n        let { questions } = this.state;\n        if (questions) {\n            var mappedQuestions = questions.map((question) => {\n                return (\n                    <div key={question.id} className='question-container'>\n                        <h1>{question.question}</h1>\n                        <ul>\n                            <li>1: {question.answer1}</li>\n                            <li>2: {question.answer2}</li>\n                            <li>3: {question.answer3}</li>\n                            <li>4: {question.answer4}</li>\n                            <li>Correct: {question.correctanswer}</li>\n\n                        </ul>\n                        <div className='btn-container-edit' >\n                            <Link to={`/host/editquestion/${question.id}`}>\n                                <button onClick ={()=> console.log(\"quesid\",question.id)} className='btn-play' >Edit</button>\n                            </Link>\n                            <button onClick={() => this.deleteQuestion(question.id)} className='btn-play'>Delete</button>\n                        </div> \n                    </div>\n                )\n            })\n\n        }\n\n        return (\n            <div className= 'mapped-container' >\n                { \n                    !this.state.toggle \n                        ?\n                    <div className='toggle-container'>\n                        <div className='btn-done-div'>\n                            <Link to='/host'>\n                                <button className='btn-play btn-done' >Done</button>\n                            </Link>\n                        </div>\n                    <div className='kwizz-container-edit'>\n                        <h1 className='kwizz-title'>{this.state.quiz.quiz_name}</h1>\n                        <br />\n                        <p className='kwizz-info kwizz-desc'>{this.state.quiz.info}</p>\n                        <div className='btn-update'>\n                        <button onClick={() => this.displayEdit()} className='btn-play' >Update</button>\n                        </div>\n                    </div>\n                    </div>\n                        :\n                        <div className='toggle-container'>\n                            <div className='btn-done-div'>\n                                <Link to='/host'>\n                                    <button className='btn-play btn-done' >Done</button>\n                                </Link>\n                            </div>\n                    <div className='kwizz-container-edit'>\n                        {/* <h1 className='kwizz-title'>{this.state.quiz.quiz_name}</h1>\n                        <p className='kwizz-info kwizz-desc'>{this.state.quiz.info}</p> */}\n                        <input placeholder={this.state.quiz.quiz_name} onChange={(e) => this.setState({ newName: e.target.value })} className='title-input input-edit ' />\n                        <br/>\n                        <textarea placeholder={this.state.quiz.info} onChange={(e) => this.setState({ newInfo: e.target.value })} className='desc-input input-edit'></textarea>\n                    <div className='btn-container-edit'>\n                        <button onClick={() => this.updateQuiz()} className='btn-play'>Save</button>\n                        <button onClick={() => this.displayEdit()} className='btn-play' >Cancel</button>\n                    </div>\n                    </div>\n                    </div>\n                }\n                <div className='question-edit-wrapper' >\n                    <div className='add-quesiton-div' >\n                        <Link to={`/host/newquestion/${this.props.quizToEdit.id}`} className='btn-link'>\n                            <button className='btn-new' id='add-question-btn'>Add Question</button>\n                        </Link>\n                    </div> \n                    <br /><br />\n                    <div  className='mapped-questions' >\n                        {mappedQuestions}\n                    </div>\n                    </div>\n                </div>\n        )\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        quizToEdit: state.quizToEdit\n    }\n}\nconst mapDispatchToProps = dispatch => ({\n \n    editingQuiz: quiz => dispatch(editingQuiz(quiz))\n});\n\nexport default connect(mapStateToProps,  mapDispatchToProps )(Questions)","import React, { Component } from 'react';\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom';\nimport { Link } from 'react-router-dom'\nimport './Host-New-Question.css';\nimport './Host.css';\n\n\nexport default class New_Question extends Component {\n    constructor() {\n        super();\n        this.state = {\n            question: '',\n            answer1: '',\n            answer2: '',\n            answer3: '',\n            answer4: '',\n            correctAnswer: 0,\n            redirect: false\n        }\n        this.addQuestion = this.addQuestion.bind(this)\n    }\n    addQuestion() {\n        let { question, answer1, answer2, answer3, answer4, correctAnswer } = this.state;\n        let { id } = this.props.match.params\n        if (question && answer1 && answer2 && answer3 && answer4 && correctAnswer) {\n            const domain = process.env.REACT_APP_DOMAIN\n            let url = domain +\"/newquestion\";\n    //       axios.post('http://localhost:3030/newquestion', { question, answer1, answer2, answer3, answer4, correctAnswer, id }).then(res => {\n            axios.post(url, { question, answer1, answer2, answer3, answer4, correctAnswer, id }).then(res => {\n\n                if (res.status === 200) {\n                    this.setState({\n                        redirect: true\n                    })\n\n                } else {\n                    alert('Something went wrong :(')\n                }\n\n            })\n\n        } else {\n            alert('All fields must be completed')\n        }\n    }\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to='/host/questions' />;\n        }\n        return (\n// I decided to just use arrow functions here instead of binding all of this at the top - Nate\n  <div className='background'>\n            <Link to='/host/questions' className='btn-go-back'>\n                go back pls :)\n            </Link>\n            <br/>\n    <div className='new-question-wrapper'>\n                <div className='new-q'>\n                    <label>Question</label>\n                    <input onChange={(e) => this.setState({ question: e.target.value })} />\n                </div>\n            \n                  <div className='new-q'> \n                    <label>Answer1</label>\n                        <input onChange={(e) => this.setState({ answer1: e.target.value })} height='100'/>\n                </div>\n                <div className='new-q'>\n                    <label>Answer2</label>\n                        <input onChange={(e) => this.setState({ answer2: e.target.value })} />\n                </div>\n                <div className='new-q'>\n                    <label>Answer3</label>\n                        <input onChange={(e) => this.setState({ answer3: e.target.value })} />\n               </div>\n                <div className='new-q'>\n                    <label>Answer4</label>\n                        <input onChange={(e) => this.setState({ answer4: e.target.value })} />\n                </div>\n                <div className='new-q'>\n                    <label>Correct answer</label>\n                    <input type='number' min='1' max='4' onChange={(e) => this.setState({ correctAnswer: e.target.value })} />\n                </div>\n                    <div className='next'>\n                        <button onClick={this.addQuestion}  className='btn-new'>Next</button>\n                    </div>\n        </div>\n     </div>   \n        )\n    }\n}\n","import React from 'react';\nimport './Game.css';\nimport triangle from '../../Assests/triangle.svg'\nimport diamond from '../../Assests/diamond.svg'\nimport square from '../../Assests/square.svg'\nimport circle from '../../Assests/circle.svg'\n\nexport default function PlayerQuestion(props){\n    return (\n        <div className='answer-container'>\n            <div className='q1' onClick={() => props.submitAnswer(1)}>\n                <img src={triangle} alt='' className='shape' />\n            </div> \n            <div className='q2' onClick={() => props.submitAnswer(2)}>\n                <img src={diamond} alt=''className=' shape'/>\n            </div> \n            <div className='q3' onClick={() => props.submitAnswer(3)}>\n                <img src={square} alt=''className='shape'/>\n            </div> \n            <div className='q4' onClick={() => props.submitAnswer(4)}>\n                <img src={circle} alt=''className='shape'/>\n            </div> \n        </div> \n    )\n}","import React from 'react';\n\nexport default (\n<svg className='path check'  xmlns='http://www.w3.org/2000/svg' width='360' height='279.8' fill='none'\nviewBox='0 0 360 279.8'>\n    <switch>\n        <g>\n            <path className='st0' id='fill' fill='none' d='M26.9,128.8c0,0,101.2,102.1,102.1,102.1s204-204,204-204'\n            />\n        </g>\n    </switch>\n</svg>\n\n)","import React from 'react';\nimport './animate.css';\nimport check from '../../Assests/check-path.js';\n\nexport default function Check(){\n    return(\n        <div className='check-wrapper' >\n            {check}\n        </div> \n    )\n}","import React from 'react';\n\nexport default (\n\n    <svg className='path xmark' xmlns='http://www.w3.org/2000/svg' width='360' height='279.8'\n    viewBox='0 0 360 279.8'>\n        <switch>\n            <g>\n                <line className='st0' x1='78' y1='37.9' x2='282' y2='241.9' />\n                <line className='st0' x1='282' y1='37.9' x2='78' y2='241.9' />\n            </g>\n        </switch>\n    </svg>\n)","import React from 'react';\nimport './animate.css';\nimport IncorrectPath from '../../Assests/incorrect-path.js';\n\nexport default function Incorrect(){\n    return(\n        <div className='check-wrapper' >\n            {IncorrectPath}\n        </div> \n    )\n}","import React from 'react';\nimport Check from '../animations/Check.js';\nimport Incorrect from '../animations/Incorrect.js';\n\nexport default function PlayerQuestionOver(props){\n    return (\n        <div>\n            {\n                props.answeredCorrect\n                ?\n                <div className='answer correct' >\n                    <h1 className='answer-indicator' >Correct</h1>\n                        <Check/>\n                </div> \n                :\n                <div className='answer incorrect' >\n                    <h1 className='answer-indicator' >Incorrect</h1>\n                        <Incorrect/>\n                </div> \n            }           \n        </div> \n    )\n}","export default __webpack_public_path__ + \"static/media/load-circle-outline.f20b64cf.svg\";","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport io from 'socket.io-client';\nimport PlayerQuestions from './Player_Questions';\nimport PlayerQuestionOver from './Player_Question_Over';\nimport './Game.css';\nimport { Link } from 'react-router-dom';\nimport load from '../../Assests/load-circle-outline.svg'\n\n\nclass Player extends Component {\n    constructor() {\n        super()\n        this.state = {\n            pinCorrect: false,\n            gameStarted: false,\n            questionOver: false,\n            answerSubmitted: false,\n            answeredCorrect: false,\n            score: 0\n        }\n        this.submitAnswer = this.submitAnswer.bind(this);\n    }\n    componentDidMount() {\n        const IP= process.env.REACT_APP_IP \n        //this.socket = io('http://127.0.0.1:3030');\n        this.socket = io(IP);\n        this.socket.emit('player-joined', this.props.selectedPin)\n        this.socket.emit('player-add', this.props)\n        this.socket.on('room-joined', (data) => { console.log('Quiz data: ' + data) })\n        this.socket.on('question-over', () => {\n            this.setState({\n                questionOver: true\n            })\n        })\n        this.socket.on('next-question', () => {\n            console.log('hit')\n            this.setState({\n                gameStarted: true,\n                questionOver: false,\n                answerSubmitted: false,\n                answeredCorrect: false\n            })\n        })\n        this.socket.on('sent-info', data => {\n            this.setState({\n                answeredCorrect: data.answeredCorrect,\n                score: this.state.score + data.score\n            })\n        })\n    }\n    submitAnswer(num) {\n        this.socket.emit('question-answered', { name: this.props.nickname, answer: num, pin: this.props.selectedPin })\n        this.setState({\n            answerSubmitted: true\n        })\n    }\n    render() {\n\n        let { gameStarted, questionOver, answerSubmitted } = this.state;\n        return (\n            <div className='player-container' >\n                <div className='status-bar'>\n                    <p className='player-info' id='pin' >PIN: {this.props.selectedPin}</p>\n                    <Link to='/'>\n                        <button >another game ?</button>\n                    </Link>\n                </div>\n                {\n                    !gameStarted && !questionOver\n                        ?\n                        <div>\n                            <p>You're in!\n                                <br />\n                                Do you see your nickname on the screen?\n                            </p>\n                            <div className='answer-container'>\n                                <div className=' q-blank q'></div>\n                                <div className=' q-blank q'></div>\n                                <div className=' q-blank q'></div>\n                                <div className=' q-blank q'></div>\n                            </div>\n                        </div>\n                        :\n                        gameStarted && !questionOver && !answerSubmitted\n                            ?\n                            <PlayerQuestions submitAnswer={this.submitAnswer} />\n                            :\n                            gameStarted && !questionOver && answerSubmitted\n                                ?\n                                <div className='waiting-for-results' >\n                                    <p className='answer-indicator' id='too-fast'>Did You answer too fast????</p>\n                                    <img src={load} alt='' className='load-circle' />\n                                </div>\n                                :\n                                <PlayerQuestionOver\n                                    answeredCorrect={this.state.answeredCorrect}\n                                />\n                }\n                <div className='status-bar' >\n\n                    <p className='player-info'>{this.props.nickname}</p>\n                    <div\n                        className={\n                            gameStarted && !questionOver && answerSubmitted\n                                ?\n                                'status-bar-hidden'\n                                :\n                                'status-bar-score'\n                        }\n                    >{this.state.score}</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        selectedPin: state.selectedPin,\n        nickname: state.nickname\n        // selectedPin: state.reducer.selectedPin,\n        // nickname: state.reducer.nickname    \n    }\n}\n\nexport default connect(mapStateToProps)(Player);","import { createStore, applyMiddleware } from 'redux';\nimport reducer from './Ducks/Reducer';\nimport promiseMiddleware from 'redux-promise-middleware';\n\n\nconst store = createStore(reducer);\n\nexport default store;\n// export default createStore(reducer, applyMiddleware(promiseMiddleware()));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport store from '../../Store';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { reducer, setIdUser } from '../../Ducks/Reducer';\r\nimport './change.css';\r\n\r\nrequire('dotenv').config()\r\nclass change extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n        }\r\n        this.change = this.change.bind(this);\r\n    }\r\n\r\n\r\n    change() {\r\n        const { username, password } = this.state;\r\n\r\n        const domain = process.env.REACT_APP_DOMAIN\r\n        let url = domain + \"/change\";\r\n        \r\n\r\n        if (username && password) {\r\n            //    axios.post(\"http://localhost:3030/change\", { username, password })\r\n            axios.post(url, { username, password })\r\n                .then((res) => {\r\n                    const { message, id } = res.data;\r\n                    if (message === 'ok') {\r\n                        this.props.setIdUser(id);\r\n                    } else {\r\n                        console.log('k co data')\r\n                    }\r\n                })\r\n\r\n                .catch(err => {\r\n\r\n                    console.error(err);\r\n                    alert('Something went wrong :(');\r\n                });\r\n        } else {\r\n            alert('Please enter all fields');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.loggedIn) {\r\n            return <Redirect to='/host' />;\r\n        }\r\n        return (\r\n            \r\n                   \r\n\r\n            <div className='login-wrapper'>\r\n                <div className='login-form'>\r\n                    <h1>Login</h1>\r\n                    <div className='form-group'>\r\n                        <label>Username:</label>\r\n                        <input type='text' onChange={(e) => this.setState({ username: e.target.value })} />\r\n                    </div>\r\n                    <div className='form-group'>\r\n                        <label>Password:</label>\r\n                        <input type='password' onChange={(e) => this.setState({ password: e.target.value })} />\r\n                    </div>\r\n                    <button onClick={this.change}>Login</button>\r\n                </div>\r\n            </div> \r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n\r\n    return {\r\n        iduser: state.iduser,\r\n        loggedIn: state.loggedIn\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setIdUser: id => dispatch(setIdUser(id))\r\n});\r\n\r\n// Connect the component to the Redux store with mapStateToProps and mapDispatchToProps\r\nexport default connect(mapStateToProps, mapDispatchToProps)(change);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport './Host-New-Question.css';\nimport './Host-Question.css'\nimport './Host.css';\n\nexport default class Edit_Question extends Component {\n    constructor() {\n        super();\n        this.state = {\n            id: 0,\n            question: '',\n            answer1: '',\n            answer2: '',\n            answer3: '',\n            answer4: '',\n            correctAnswer: ''\n        }\n    }\n    componentDidMount() {\n       \n        this.getQuestion()\n    }\n    getQuestion() {\n        const domain = process.env.REACT_APP_DOMAIN\n        let url =domain+ \"/getquestion\";\n   //     axios.get('http://localhost:3030/getquestion',{\n        axios.get(url,{\n            params: {\n                id: this.props.match.params.id\n            }\n        })\n      \n        .then(res => {\n            let question = res.data[0]\n            console.log(question)\n            console.log(question.id)\n            this.setState({\n                id: question.id,\n                question: question.question,\n                answer1: question.answer1,\n                answer2: question.answer2,\n                answer3: question.answer3,\n                answer4: question.answer4,\n                correctAnswer: question.correctanswer,\n                redirect: false\n            })\n        })\n        .catch(function (error) {\n            if (error.response) {\n              // The request was made and the server responded with a status code\n              // that falls out of the range of 2xx\n              console.log(error.response.data);\n              console.log(error.response.status);\n              console.log(error.response.headers);\n            } else if (error.request) {\n              // The request was made but no response was received\n              // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n              // http.ClientRequest in node.js\n              console.log(error.request);\n            } else {\n              // Something happened in setting up the request that triggered an Error\n              console.log('Error', error.message);\n            }\n            console.log(error.config);\n          });\n    }\n    updateQuestion() {\n        let { question, answer1, answer2, answer3, answer4, correctAnswer, id } = this.state;\n        const domain = process.env.REACT_APP_DOMAIN\n        let url = domain+ \"/updatequestion\";\n        if (question && answer1 && answer2 && answer3 && answer4 && correctAnswer && id) {\n        //    axios.put('http://localhost:3030/updatequestion', { question, answer1, answer2, answer3, answer4, correctAnswer, id }).then(res => {\n            axios.put(url, { question, answer1, answer2, answer3, answer4, correctAnswer, id }).then(res => {\n                if (res.status === 200) {\n                    this.setState({\n                        redirect: true\n                    })\n                } else {\n                    alert('Something went wrong :(')\n                }\n            })\n\n        } else {\n            alert('All fields must be completed')\n        }\n    }\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to='/host/questions' />\n        }\n        return (                                        \n// Used a bunch of arrow functions here instead of binding at top - Nate\n        <div className='mapped-container'>\n        <Link to='/host/questions' className='btn-link'>\n        go back\n        </Link>\n            <div className='new-q'>\n                <label>Question</label>\n                <input value={this.state.question} onChange={(e) => this.setState({ question: e.target.value })} />\n            </div>\n                <br />\n            <div className='new-q'>\n                <label>Answer1</label>\n                <input value={this.state.answer1} onChange={(e) => this.setState({ answer1: e.target.value })} />\n            </div>\n                <br />\n            <div className='new-q'>\n                <label>Answer2</label>\n                <input value={this.state.answer2} onChange={(e) => this.setState({ answer2: e.target.value })} />\n            </div>\n                <br />\n            <div className='new-q'>\n                <label>Answer3</label>\n                <input value={this.state.answer3} onChange={(e) => this.setState({ answer3: e.target.value })} />\n            </div>\n                <br />\n            <div className='new-q'>\n                <label>Answer4</label>\n                <input value={this.state.answer4} onChange={(e) => this.setState({ answer4: e.target.value })} />\n            </div>\n                <br />\n            <div className='new-q'>\n                <label>Correct Answer</label>\n                <input type='number' value={this.state.correctAnswer} onChange={(e) => this.setState({ correctAnswer: e.target.value })} />\n                <button onClick={() => this.updateQuestion()}>Update</button>\n            </div>\n\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Landing from './components/Landing/Landing';\nimport Main from './components/Host/Main';\nimport New_Quiz from './components/Host/New_Quiz'\nimport Game from './components/Game/Game'\nimport Questions from './components/Host/Questions';\nimport New_Question from './components/Host/New_Question';\nimport Player from './components/Game/Player';\nimport change from './components/Landing/change';\nimport Edit_Question from './components/Host/Edit_Question';\nimport './App.css';\nimport './reset.css';\n\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <div>\n        <Switch>\n          \n          <Route path='/' exact component={Landing} />\n          <Route path='/game' component={Game} />\n          <Route path='/host' exact component={Main} />\n          <Route path='/host/newQuiz' component={New_Quiz} />\n          <Route path='/host/questions' component={Questions} />\n          <Route path='/host/newquestion/:id' component={New_Question} />\n          <Route path='/host/editquestion/:id' component={Edit_Question} />\n          <Route path='/player' component={Player} />\n          <Route path='/change' component={change} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  console.log(process.env)\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { unregister } from './registerServiceWorker';\nimport { HashRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport Store from './Store'\n\nReactDOM.render(\n    <Provider store={Store}>\n    <HashRouter>\n        <App />\n    </HashRouter>\n    </Provider>\n    ,\n    document.getElementById('root')\n);\nunregister();\n"],"sourceRoot":""}